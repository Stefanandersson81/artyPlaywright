const { testLogin } = require('../commands/login');
const { sokOrg } = require('../commands/sokOrg');
const { andraSokOrg } = require('../commands/andrsSokOrg');
const { felOrg } = require('../commands/felOrg');

async function testArtillery(page, vuContext, events, test) {
  const scenarioName = vuContext.scenario.name;
  const userId = vuContext.vu;

  console.log(`üöÄ Startar testArtillery f√∂r anv√§ndare ${userId} (${scenarioName})`);
  events.emit("counter", `user.${scenarioName}.STARTED`, 1);

  // === Steg 1: Logga in
  await test.step("üîê testLogin", async () => {
    const start = Date.now();
    await testLogin(page);
    const duration = Date.now() - start;
    console.log(`‚è± testLogin tog ${duration} ms`);
    events.emit("histogram", "testLogin.duration", duration);
  });

  // === Steg 2: F√∂rsta s√∂kning
  await test.step("üîç sokOrg", async () => {
    const start = Date.now();
    await sokOrg(page);
    const duration = Date.now() - start;
    console.log(`‚è± sokOrg tog ${duration} ms`);
    events.emit("histogram", "sokOrg.duration", duration);
  });

  // === Steg 3: Andra s√∂kning
  await test.step("üîÅ andraSokOrg", async () => {
    const start = Date.now();
    await andraSokOrg(page);
    const duration = Date.now() - start;
    console.log(`‚è± andraSokOrg tog ${duration} ms`);
    events.emit("histogram", "andraSokOrg.duration", duration);
  });

  // === Steg 4: Felaktig s√∂kning
  await test.step("‚ùå felOrg", async () => {
    const start = Date.now();
    await felOrg(page);
    const duration = Date.now() - start;
    console.log(`‚è± felOrg tog ${duration} ms`);
    events.emit("histogram", "felOrg.duration", duration);
  });

  // === Avslut
  await test.step("üèÅ Slut p√• testArtillery", async () => {
    console.log(`‚úÖ testArtillery slutf√∂rt f√∂r ${scenarioName} (${userId})`);
  });

  events.emit("counter", `user.${scenarioName}.COMPLETED`, 1);
}

module.exports = {
  testArtillery
};
